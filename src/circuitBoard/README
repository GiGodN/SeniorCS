ANALYSIS:
	
	I believe that using a queue would result in a better search algorithm because
	a stack would pick a branch and then explore it to the end, where a queue 
	would explore all paths equally fast, this could result in a faster search
	algorithm as you can then trim your possible tree to only the paths sorter 
	than the current best path. I believe that the queue search should have 
	around a n log(n) runtime where using stacks it will have a n^2 runtime 
	where n is the longest path, because the queue search will end up exploring 
	less of the total map with more branches, and stacks will pick one branch and
	explore it to its fullest so it will have to explore every branch up until its 
	finished
	
DESIGN:

	I just followed what was given, I created the sorting algorithm almost verbatim
	to the algorithm overview. I did add some optimization where i stopped following
	any path longer then the best path. The CircuitBoard constructor was a problem 
	because of how I had my project set up. But i was able to fix some of the errors
	by changing my project setup.
	
TESTING:

	I used the provided input files and just made sure every file was doing what it needed.
	I also used the provided test class to make sure I was passing every test. Most of the 
	bugs I found were related to not throwing an error when I needed to, and these were
	found using the invalid input files.
	
DISCUSSION:

	The hardest part of the project overall was re-learning swing for the GUI extra credit,
	but overall the project was just follow the steps.